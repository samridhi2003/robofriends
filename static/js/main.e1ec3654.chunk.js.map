{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","React","createElement","className","alt","src","concat","style","width","height","CardList","_ref","robots","CardArray","map","user","i","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","overflowY","border","children","App","_Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","onSearchChange","event","setState","target","value","state","_inherits","_createClass","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"yNAeeA,EAbH,SAACC,GAAS,IACXC,EAAoBD,EAApBC,KAAOC,EAAaF,EAAbE,MAAQC,EAAKH,EAALG,GACtB,OACIC,IAAAC,cAAA,OAAKC,UAAU,uDACXF,IAAAC,cAAA,OAAKE,IAAI,SAASC,IAAG,wBAAAC,OAA0BN,GAAMO,MAAO,CAACC,MAAO,MAAQC,OAAS,UACrFR,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAKJ,GACLG,IAAAC,cAAA,SAAIH,MCYLW,EAlBE,SAAHC,GAAmB,IAAbC,EAAMD,EAANC,OACVC,EAAYD,EAAOE,IAAI,SAACC,EAAMC,GAChC,OAAOf,IAAAC,cAACN,EAAI,CAACqB,IAAKD,EACdhB,GAAIY,EAAOI,GAAGhB,GACdF,KAAMc,EAAOI,GAAGlB,KAChBC,MAAOa,EAAOI,GAAGjB,UAGzB,OACIE,IAAAC,cAAA,WACKW,ICAEK,EAVG,SAAHP,GAAgBA,EAAXQ,YAA8B,IAAjBC,EAAYT,EAAZS,aAC7B,OACInB,IAAAC,cAAA,OAAKC,UAAU,OACfF,IAAAC,cAAA,SACCC,UAAU,mCACXkB,KAAK,SAASC,YAAY,gBAC1BC,SAAWH,MCEJI,EARC,SAAC3B,GACb,OAAQI,IAAAC,cAAA,OAAKK,MAAO,CAACkB,UAAY,SAAWC,OAAQ,kBAAoBjB,OAAQ,UAC3EZ,EAAM8B,WC4CAC,SA1CN,SAAAC,GACL,SAAAD,IAAa,IAAAE,EAKR,OALQC,YAAAC,KAAAJ,IACTE,EAAAG,YAAAD,KAAAE,YAAAN,GAAAO,KAAAH,QAeJI,eAAgB,SAACC,GACbP,EAAKQ,SAAS,CAACnB,YAAakB,EAAME,OAAOC,SAfzCV,EAAKW,MAAO,CACR7B,OAAS,GACTO,YAAc,IACjBW,EAiCJ,OAvCIY,YAAAd,EAAAC,GAOJc,YAAAf,EAAA,EAAAX,IAAA,oBAAAuB,MAAA,WACkB,IAAAI,EAAAZ,KACfa,MAAM,8CAA8CC,KAAK,SAAAC,GACpD,OAAOA,EAASC,SAEpBF,KAAK,SAAAG,GACFL,EAAKN,SAAS,CAAC1B,OAAOqC,QAE7B,CAAAhC,IAAA,SAAAuB,MAAA,WAKO,IAAAU,EAC0BlB,KAAKS,MAA5B7B,EAAMsC,EAANtC,OAASO,EAAW+B,EAAX/B,YACVgC,EAAgBvC,EAAOwC,OAAO,SAAAC,GAChC,OAAOA,EAAMvD,KAAKwD,cAAcC,SAASpC,EAAYmC,iBAEzD,OAAqB,IAAlB1C,EAAO4C,OACCvD,IAAAC,cAAA,UAAI,WAIXD,IAAAC,cAAA,OAAKC,UAAU,MACXF,IAAAC,cAAA,MAAIC,UAAU,MAAK,eACnBF,IAAAC,cAACgB,EAAS,CAACE,aAAcY,KAAKI,iBAC9BnC,IAAAC,cAACsB,EAAM,KACXvB,IAAAC,cAACQ,EAAQ,CAACE,OAAQuC,UAKzBvB,EAvCI,CAAS6B,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAhB,KAAAe,EAAAE,KAAA,UAAqBjB,KAAK,SAAAnC,GAAiD,IAA9CqD,EAAMrD,EAANqD,OAAQC,EAAMtD,EAANsD,OAAQC,EAAMvD,EAANuD,OAAQC,EAAMxD,EAANwD,OAAQC,EAAOzD,EAAPyD,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,YCADU,IAASC,WAAYC,SAASC,eAAe,SACrDC,OACHxE,IAAAC,cAACD,IAAMyE,WAAU,KACfzE,IAAAC,cAAC0B,EAAG,QAOR8B","file":"static/js/main.e1ec3654.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card= (props) =>{\r\n    const {name , email , id}= props;\r\n    return(\r\n        <div className='tc bg-light-green dib br3 pd3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}`} style={{width: '200' , height : 'auto' }} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    const CardArray = robots.map((user, i) => {\r\n        return <Card key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n        />\r\n    })\r\n    return (\r\n        <div>\r\n            {CardArray}\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({searchField, searchChange}) =>{\r\n    return(\r\n        <div className='pa2'>\r\n        <input\r\n         className='pa3 ba b--green bg-lightest-blue' \r\n        type='search' placeholder='Search Robots'\r\n        onChange= {searchChange} />\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst  Scroll = (props) =>{\r\n    return( <div style={{overflowY : 'scroll' , border: '1px solid black' , height: '500px'}}>\r\n        {props.children}\r\n    </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            robots : [],\r\n            searchField : ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response =>{\r\n             return response.json();\r\n        })\r\n        .then(users=>{\r\n            this.setState({robots:users}) \r\n        })\r\n    }\r\n\r\n    onSearchChange= (event) =>{\r\n        this.setState({searchField: event.target.value})\r\n    }\r\n    render(){\r\n        const {robots , searchField}= this.state;\r\n        const filteredRobots= robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        })\r\n        if(robots.length === 0){\r\n            return <h1>Loading</h1>\r\n        }\r\n        else{\r\n        return (\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n            <CardList robots={filteredRobots}/>\r\n            </Scroll>\r\n            </div>\r\n        ) ;\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot( document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}